# based on https://github.com/dask/dask-docker/blob/main/notebook/Dockerfile
FROM jupyter/base-notebook:lab-3.0.16

USER root

RUN apt-get update \
    && apt-get install \
        -y \
        -q \
        --no-install-recommends \
            curl \
            graphviz \
            git \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

RUN curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl" && \
    mkdir -p /usr/local/bin && \
    mv ./kubectl /usr/local/bin/kubectl && \
    chmod +x /usr/local/bin/kubectl && \
    kubectl version --client

USER $NB_USER

RUN conda install \
        --yes \
        -c conda-forge \
            python-blosc \
            cytoolz \
            dask \
            distributed \
            lz4 \
            nomkl \
            numpy \
            pandas \
            ipywidgets \
            dask-labextension>=5 \
            python-graphviz \
    && conda clean -tipsy \
    && jupyter lab clean \
    && jlpm cache clean \
    && npm cache clean --force \
    && find /opt/conda/ -type f,l -name '*.a' -delete \
    && find /opt/conda/ -type f,l -name '*.pyc' -delete \
    && find /opt/conda/ -type f,l -name '*.js.map' -delete \
    && find /opt/conda/lib/python*/site-packages/bokeh/server/static -type f,l -name '*.js' -not -name '*.min.js' -delete \
    && rm -rf /opt/conda/pkgs

USER root

# Create the /opt/app directory, and assert that Jupyter's NB_UID/NB_GID values
# haven't changed.
RUN mkdir /opt/app \
    && if [ "$NB_UID" != "1000" ] || [ "$NB_GID" != "100" ]; then \
    echo "Jupyter's NB_UID/NB_GID changed, need to update the Dockerfile"; \
    exit 1; \
    fi

RUN curl \
        --fail \
        https://raw.githubusercontent.com/dask/dask-docker/main/notebook/prepare.sh \
        > /usr/bin/prepare.sh && \
    chmod +x /usr/bin/prepare.sh

RUN apt-get update && \
    apt-get install -y \
        --no-install-recommends \
        build-essential \
        cmake \
        lsof \
        net-tools && \
    rm -rf /var/lib/apt/lists/* && \
    conda install -y -c conda-forge \
        dask-cloudprovider \
        scikit-learn \
        dask-ml \
        numpy \
        pandas && \
    pip install --no-cache-dir \
        awscli

ENTRYPOINT ["tini", "--", "/usr/bin/prepare.sh"]
